@model SpelavondenApp.Models.BoardGameNight.BoardGameNightDetailViewModel
<head>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
</head>

<h2>Board Game Night Details</h2>

<!-- Game Night Details -->
<div>
    <h3>Organizer: @Model.OrganizerName</h3>
    <p>Date: @Model.Date.ToString("dd MMM yyyy")</p>
    <p>Maximum Players: @Model.MaxPlayers</p>
    <p>18+ Event: @(Model.Is18Plus ? "Yes" : "No")</p>
</div>

@if (Model.CurrentUserPersonId == Model.OrganizerId)
{
    if (Model.CanEditOrDelete)
    {
        <a href="@Url.Action("Edit", "BoardGameNight", new { id = Model.BoardGameNightId })" class="btn btn-warning">Edit</a>
        <form asp-action="Delete" method="post" onsubmit="return confirm('Are you sure you want to delete this board game night?');">
            <input type="hidden" name="id" value="@Model.BoardGameNightId" />
            <button type="submit" class="btn btn-danger">Delete</button>
        </form>
    }
    else
    {
        <p>You cannot edit or delete this board game night because participants have already signed up.</p>
    }
}

<!-- Address -->
<h4>Address</h4>
<div>
    <p>@Model.Address.Street, @Model.Address.City, @Model.Address.HouseNumber</p>
</div>

<!-- Participants -->
<h4>Participants</h4>
<ul>
    @if (Model.Participants != null && Model.Participants.Any())
    {
        foreach (var participant in Model.Participants)
        {
            <li>@participant.Name</li>
        }
    }
    else
    {
        <p>No participants yet.</p>
    }
</ul>

@if (ViewBag.WarningMessages != null)
{
    // Explicitly cast to List<string>
    var warningMessages = ViewBag.WarningMessages as List<string>;

    // Check if the cast was successful and if there are any warning messages
    if (warningMessages != null && warningMessages.Any())
    {
        <div class="alert alert-warning">
            <strong>Warning!</strong> There are dietary mismatches. Please review your selections.
            <ul>
                @foreach (var message in ViewBag.WarningMessages)
                {
                    <li>@message</li>
                }
            </ul>

            <input type="checkbox" id="acknowledgeWarnings" required />
            <label for="acknowledgeWarnings">I acknowledge the dietary warnings and wish to proceed.</label>

        </div>
    }
}


@if (Model.CurrentUserPersonId != null)
{
    if (Model.CurrentUserPersonId != Model.OrganizerId)
    {
        // Check if the current user is in the participants list
        var isUserParticipant = Model.Participants.Any(p => p.PersonId == Model.CurrentUserPersonId);

        if (isUserParticipant)
        {
            // Show the cancel button if the user is a participant and the event has not started
            if (DateTime.Now < Model.Date)
            {
                <form method="post" asp-action="CancelParticipation" asp-route-id="@Model.BoardGameNightId" class="cancel-form">
                    <button type="submit" class="btn btn-danger">Cancel Participation</button>
                </form>
            }
            else
            {
                <p>It's too late to cancel participation; the game night has already started or ended.</p>
            }
        }
        else
        {
            // Show the sign-up button if there's still space and the user is not a participant
            if (Model.Participants.Count() < Model.MaxPlayers && DateTime.Now < Model.Date)
            {
                <div class="text-danger">
                    <!-- Show validation or warnings if any -->
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                </div>

                <form method="post" asp-action="SignUp" asp-route-id="@Model.BoardGameNightId" class="signup-form">
                    <button type="submit" class="btn btn-primary">Sign Up for Game Night</button>
                </form>



            }
            if (DateTime.Now > Model.Date)
            {
                <p>Game night already started</p>
            }
            else if (Model.Participants.Count() >= Model.MaxPlayers)
            {
                <p>Game night already full</p>
            }
        }
    }
    else
    {
        <p>As the organizer, you cannot sign up or cancel participation.</p>
    }
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<!-- Board Games -->
<h4>Board Games</h4>
<ul>
    @foreach (var game in Model.BoardGames)
    {
        <li>
            <strong>@game.Name</strong>
            <p>Type: @game.GameType</p>
            <p>Genre: @game.Genre</p>
            <p>18+ @(game.Is18Plus ? "Yes" : "No")</p>

            @if (game.Image != null)
            {
                <img src="data:image/png;base64,@(Convert.ToBase64String(game.Image))" alt="@game.Name" style="width: 100px; height: auto;" />
            }
        </li>
    }
</ul>

<!-- Food Options -->
<h4>Food Options</h4>
<ul>
    @foreach (var option in Model.FoodOptions)
    {
        <li>@option</li>
    }
</ul>

<!-- Reviews -->
<h4>Reviews</h4>
<ul>
    @if (Model.Reviews != null && Model.Reviews.Any())
    {
        foreach (var review in Model.Reviews)
        {
            <li>@review.Rating</li>
            <li>@review.ReviewText</li>
        }
    }
    else
    {
        <p>No reviews yet.</p>
    }
</ul>



